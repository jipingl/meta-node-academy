{
  "address": "0x364E013c168caCfacBaa18134E8df850b020Cefd",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_liq",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_mkt",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_burn",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "excluded",
          "type": "bool"
        }
      ],
      "name": "ExcludedFromFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "totalBP",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "liqBP",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "mktBP",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "burnBP",
          "type": "uint16"
        }
      ],
      "name": "FeeParamsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "liqReceiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mktReceiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "burnReceiver",
          "type": "address"
        }
      ],
      "name": "FeeReceiversUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liqAmt",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mktAmt",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "burnAmt",
          "type": "uint256"
        }
      ],
      "name": "FeesDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "TxCountReset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTxAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxDailyTxCount",
          "type": "uint256"
        }
      ],
      "name": "TxLimitUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnFeeBP",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isExcludedFromFee",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liqFeeBP",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketingReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxDailyTxCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTxAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mktFeeBP",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "excluded",
          "type": "bool"
        }
      ],
      "name": "setExcludedFromFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_totalFeeBP",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_liqBP",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_mktBP",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_burnBP",
          "type": "uint16"
        }
      ],
      "name": "setFeeParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liqReceiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_mktReceiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_burnReceiver",
          "type": "address"
        }
      ],
      "name": "setFeeReceivers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTxAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxDailyTxCount",
          "type": "uint256"
        }
      ],
      "name": "setTxLimits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFeeBP",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "txData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "windowStart",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xe80fc11d4b91e85bcbb712eb6f3862e085d76bdf901fc1b4db470fed4c5d90e8",
  "receipt": {
    "to": null,
    "from": "0x61C2b68Ff0e5872ACDa86Ce920F27ECb4E18D8dA",
    "contractAddress": "0x364E013c168caCfacBaa18134E8df850b020Cefd",
    "transactionIndex": 170,
    "gasUsed": "5267999",
    "logsBloom": "0x
    "blockHash": "0xf8759e36b27a8471ad9728a45000f040e4b746facc207fd76c11cad2338ea92b",
    "transactionHash": "0xe80fc11d4b91e85bcbb712eb6f3862e085d76bdf901fc1b4db470fed4c5d90e8",
    "logs": [
      {
        "transactionIndex": 170,
        "blockNumber": 8590645,
        "transactionHash": "0xe80fc11d4b91e85bcbb712eb6f3862e085d76bdf901fc1b4db470fed4c5d90e8",
        "address": "0x364E013c168caCfacBaa18134E8df850b020Cefd",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000061c2b68ff0e5872acda86ce920f27ecb4e18d8da"
        ],
        "data": "0x",
        "logIndex": 209,
        "blockHash": "0xf8759e36b27a8471ad9728a45000f040e4b746facc207fd76c11cad2338ea92b"
      },
      {
        "transactionIndex": 170,
        "blockNumber": 8590645,
        "transactionHash": "0xe80fc11d4b91e85bcbb712eb6f3862e085d76bdf901fc1b4db470fed4c5d90e8",
        "address": "0xF62c03E08ada871A0bEb309762E260a7a6a880E6",
        "topics": [
          "0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
          "0x000000000000000000000000364e013c168cacfacbaa18134e8df850b020cefd",
          "0x000000000000000000000000fff9976782d46cc05630d1f6ebab18b2324d6b14"
        ],
        "data": "0x00000000000000000000000051862dd8a762591e4cf2d2a92b29e11fdb499c770000000000000000000000000000000000000000000000000000000000001a1d",
        "logIndex": 210,
        "blockHash": "0xf8759e36b27a8471ad9728a45000f040e4b746facc207fd76c11cad2338ea92b"
      },
      {
        "transactionIndex": 170,
        "blockNumber": 8590645,
        "transactionHash": "0xe80fc11d4b91e85bcbb712eb6f3862e085d76bdf901fc1b4db470fed4c5d90e8",
        "address": "0x364E013c168caCfacBaa18134E8df850b020Cefd",
        "topics": [
          "0x89fff793699959af5dcab3e18ade40385b3b082329c97662cb42b7eb7823be07"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000001f400000000000000000000000000000000000000000000000000000000000000a700000000000000000000000000000000000000000000000000000000000000a700000000000000000000000000000000000000000000000000000000000000a6",
        "logIndex": 211,
        "blockHash": "0xf8759e36b27a8471ad9728a45000f040e4b746facc207fd76c11cad2338ea92b"
      },
      {
        "transactionIndex": 170,
        "blockNumber": 8590645,
        "transactionHash": "0xe80fc11d4b91e85bcbb712eb6f3862e085d76bdf901fc1b4db470fed4c5d90e8",
        "address": "0x364E013c168caCfacBaa18134E8df850b020Cefd",
        "topics": [
          "0x258e24a18ff1c8ada2455b83e078fd1658c71e0d9b83f439d76d9705f66396c4"
        ],
        "data": "0x00000000000000000000000000000000000000001027e72f1f12813088000000000000000000000000000000000000000000000000000000000000000000000a",
        "logIndex": 212,
        "blockHash": "0xf8759e36b27a8471ad9728a45000f040e4b746facc207fd76c11cad2338ea92b"
      },
      {
        "transactionIndex": 170,
        "blockNumber": 8590645,
        "transactionHash": "0xe80fc11d4b91e85bcbb712eb6f3862e085d76bdf901fc1b4db470fed4c5d90e8",
        "address": "0x364E013c168caCfacBaa18134E8df850b020Cefd",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000061c2b68ff0e5872acda86ce920f27ecb4e18d8da"
        ],
        "data": "0x000000000000000000000000000000000000000c9f2c9cd04674edea40000000",
        "logIndex": 213,
        "blockHash": "0xf8759e36b27a8471ad9728a45000f040e4b746facc207fd76c11cad2338ea92b"
      }
    ],
    "blockNumber": 8590645,
    "cumulativeGasUsed": "30731958",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xeE567Fe1712Faf6149d80dA1E6934E354124CfE3",
    "0x61C2b68Ff0e5872ACDa86Ce920F27ECb4E18D8dA",
    "0x61C2b68Ff0e5872ACDa86Ce920F27ECb4E18D8dA",
    "0x0000000000000000000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "1f3137475410c10764c87bfdaea5ef65",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liq\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mkt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_burn\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"ExcludedFromFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"totalBP\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"liqBP\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"mktBP\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"burnBP\",\"type\":\"uint16\"}],\"name\":\"FeeParamsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liqReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mktReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burnReceiver\",\"type\":\"address\"}],\"name\":\"FeeReceiversUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liqAmt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mktAmt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnAmt\",\"type\":\"uint256\"}],\"name\":\"FeesDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"TxCountReset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTxAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxDailyTxCount\",\"type\":\"uint256\"}],\"name\":\"TxLimitUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnFeeBP\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liqFeeBP\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDailyTxCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mktFeeBP\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"setExcludedFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_totalFeeBP\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_liqBP\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_mktBP\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_burnBP\",\"type\":\"uint16\"}],\"name\":\"setFeeParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liqReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mktReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_burnReceiver\",\"type\":\"address\"}],\"name\":\"setFeeReceivers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxDailyTxCount\",\"type\":\"uint256\"}],\"name\":\"setTxLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeeBP\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"windowStart\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeLiquidity(uint256,uint256,uint256)\":{\"details\":\"Caller must approve this contract to spend `liquidity` LP tokens beforehand.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(uint256,uint256,uint256)\":{\"notice\":\"Add liquidity to the DEX pool by supplying token+ETH.\"},\"burnFeeBP()\":{\"notice\":\"Sub\\u2011fee for burn (BP)\"},\"liqFeeBP()\":{\"notice\":\"Sub\\u2011fee for liquidity (BP)\"},\"mktFeeBP()\":{\"notice\":\"Sub\\u2011fee for marketing (BP)\"},\"removeLiquidity(uint256,uint256,uint256)\":{\"notice\":\"Remove liquidity from the DEX pool, burn or return LP tokens\"},\"setExcludedFromFee(address,bool)\":{\"notice\":\"Exempt or include an address from fee\"},\"setFeeReceivers(address,address,address)\":{\"notice\":\"Update fee receivers\"},\"setTxLimits(uint256,uint256)\":{\"notice\":\"Update max tx amount and daily tx count\"},\"totalFeeBP()\":{\"notice\":\"Total fee in basis points (1\\u202fBP = 0.01%). Max allowed 1000 (10%).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"MyToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Factory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\n\\n    function feeTo() external view returns (address);\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n    function allPairs(uint) external view returns (address pair);\\n    function allPairsLength() external view returns (uint);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n    function setFeeToSetter(address) external;\\n}\\n\",\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\"},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\"},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\nimport './IUniswapV2Router01.sol';\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\"},\"contracts/MyToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\\\";\\nimport \\\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\\\";\\n\\ncontract MyToken is ERC20, Ownable {\\n    // \\u2014\\u2014 Fee Parameters \\u2014\\u2014\\n    /// @notice Total fee in basis points (1\\u202fBP = 0.01%). Max allowed 1000 (10%).\\n    uint16 public totalFeeBP;\\n\\n    /// @notice Sub\\u2011fee for liquidity (BP)\\n    uint16 public liqFeeBP;\\n    /// @notice Sub\\u2011fee for marketing (BP)\\n    uint16 public mktFeeBP;\\n    /// @notice Sub\\u2011fee for burn (BP)\\n    uint16 public burnFeeBP;\\n\\n    // \\u2014\\u2014 Fee Receivers \\u2014\\u2014\\n    address public liquidityReceiver;\\n    address public marketingReceiver;\\n    address public burnReceiver;\\n\\n    // \\u2014\\u2014 Exemptions \\u2014\\u2014\\n    mapping(address => bool) public isExcludedFromFee;\\n\\n    // \\u2014\\u2014 Uniswap V2 Router & Pair \\u2014\\u2014\\n    IUniswapV2Router02 public immutable uniswapV2Router;\\n    address public immutable uniswapV2Pair;\\n\\n    // \\u2014\\u2014 Transaction Limits \\u2014\\u2014\\n    uint256 public maxTxAmount;\\n    uint256 public maxDailyTxCount;\\n    struct TxData {\\n        uint256 count;\\n        uint256 windowStart;\\n    }\\n    mapping(address => TxData) public txData;\\n\\n    // \\u2014\\u2014 Events \\u2014\\u2014\\n    event FeesDistributed(uint256 liqAmt, uint256 mktAmt, uint256 burnAmt);\\n    event FeeParamsUpdated(\\n        uint16 totalBP,\\n        uint16 liqBP,\\n        uint16 mktBP,\\n        uint16 burnBP\\n    );\\n    event FeeReceiversUpdated(\\n        address indexed liqReceiver,\\n        address indexed mktReceiver,\\n        address indexed burnReceiver\\n    );\\n    event ExcludedFromFeeUpdated(address indexed account, bool excluded);\\n    event TxLimitUpdated(uint256 maxTxAmount, uint256 maxDailyTxCount);\\n    event TxCountReset(address indexed account);\\n\\n    constructor(\\n        address router_,\\n        address _liq,\\n        address _mkt,\\n        address _burn\\n    ) ERC20(\\\"MyToken\\\", \\\"MTK\\\") Ownable(msg.sender) {\\n        // set uniswap router\\n        uniswapV2Router = IUniswapV2Router02(router_);\\n        // create a uniswap pair for this token and WETH\\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(\\n                address(this),\\n                uniswapV2Router.WETH()\\n            );\\n\\n        // set initial receivers\\n        liquidityReceiver = _liq;\\n        marketingReceiver = _mkt;\\n        burnReceiver = _burn;\\n\\n        // exempt deployer and this contract from fees\\n        isExcludedFromFee[msg.sender] = true;\\n        isExcludedFromFee[address(this)] = true;\\n\\n        // initial fee parameters\\n        setFeeParams(500, 167, 167, 166);\\n\\n        // set default tx amount\\n        uint256 initialSupply = 1_000_000_000_000 * 10 ** decimals();\\n        maxTxAmount = (initialSupply * 5) / 1000;\\n        maxDailyTxCount = 10;\\n        emit TxLimitUpdated(maxTxAmount, maxDailyTxCount);\\n\\n        // mint 1\\u202f000\\u202f000\\u202f000\\u202f000 * 10^decimals() to deployer\\n        _mint(msg.sender, initialSupply);\\n    }\\n\\n    function _update(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal override {\\n        // transaction limit (skip for exempted)\\n        if (!isExcludedFromFee[from] && !isExcludedFromFee[to]) {\\n            _enforceTxLimit(from, value);\\n        }\\n\\n        // if fee disabled or either side is exempt \\u2192 normal transfer\\n        if (\\n            totalFeeBP == 0 ||\\n            isExcludedFromFee[from] == true ||\\n            isExcludedFromFee[to] == true\\n        ) {\\n            super._update(from, to, value);\\n            return;\\n        }\\n\\n        // calculate fee\\n        uint256 feeAmount = (value * totalFeeBP) / 10_000;\\n        uint256 sendAmount = value - feeAmount;\\n\\n        // allocate sub\\u2011fees\\n        uint256 liqAmount = (feeAmount * liqFeeBP) / totalFeeBP;\\n        uint256 mktAmount = (feeAmount * mktFeeBP) / totalFeeBP;\\n        uint256 burnAmount = feeAmount - liqAmount - mktAmount;\\n\\n        // distribute fees\\n        super._update(from, liquidityReceiver, liqAmount);\\n        super._update(from, marketingReceiver, mktAmount);\\n        super._update(from, burnReceiver, burnAmount);\\n\\n        // final transfer to recipient\\n        super._update(from, to, sendAmount);\\n\\n        emit FeesDistributed(liqAmount, mktAmount, burnAmount);\\n    }\\n\\n    function _enforceTxLimit(address sender, uint256 amount) internal {\\n        require(amount <= maxTxAmount, \\\"amount exceeds maxTxAmount\\\");\\n\\n        TxData storage data = txData[sender];\\n        uint256 nowTS = block.timestamp;\\n        // if 24h window expired, reset\\n        if (nowTS >= data.windowStart + 1 days) {\\n            data.windowStart = nowTS;\\n            data.count = 0;\\n            emit TxCountReset(sender);\\n        }\\n        // increment & check count\\n        data.count += 1;\\n        require(data.count <= maxDailyTxCount, \\\"exceeds daily tx count\\\");\\n    }\\n\\n    function setFeeParams(\\n        uint16 _totalFeeBP,\\n        uint16 _liqBP,\\n        uint16 _mktBP,\\n        uint16 _burnBP\\n    ) public onlyOwner {\\n        require(_totalFeeBP <= 1000, \\\"totalFeeBP > 10%\\\");\\n        require(_totalFeeBP == _liqBP + _mktBP + _burnBP, \\\"sub-fees mismatch\\\");\\n\\n        totalFeeBP = _totalFeeBP;\\n        liqFeeBP = _liqBP;\\n        mktFeeBP = _mktBP;\\n        burnFeeBP = _burnBP;\\n        emit FeeParamsUpdated(_totalFeeBP, _liqBP, _mktBP, _burnBP);\\n    }\\n\\n    /// @notice Update fee receivers\\n    function setFeeReceivers(\\n        address _liqReceiver,\\n        address _mktReceiver,\\n        address _burnReceiver\\n    ) external onlyOwner {\\n        liquidityReceiver = _liqReceiver;\\n        marketingReceiver = _mktReceiver;\\n        burnReceiver = _burnReceiver;\\n        emit FeeReceiversUpdated(_liqReceiver, _mktReceiver, _burnReceiver);\\n    }\\n\\n    /// @notice Exempt or include an address from fee\\n    function setExcludedFromFee(\\n        address account,\\n        bool excluded\\n    ) external onlyOwner {\\n        isExcludedFromFee[account] = excluded;\\n        emit ExcludedFromFeeUpdated(account, excluded);\\n    }\\n\\n    /// @notice Update max tx amount and daily tx count\\n    function setTxLimits(\\n        uint256 _maxTxAmount,\\n        uint256 _maxDailyTxCount\\n    ) external onlyOwner {\\n        maxTxAmount = _maxTxAmount;\\n        maxDailyTxCount = _maxDailyTxCount;\\n        emit TxLimitUpdated(_maxTxAmount, _maxDailyTxCount);\\n    }\\n\\n    /// @notice Add liquidity to the DEX pool by supplying token+ETH.\\n    function addLiquidity(\\n        uint256 tokenAmount,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin\\n    ) external payable {\\n        require(msg.value > 0, \\\"Must send ETH\\\");\\n        // transfer tokens from caller\\n        _update(msg.sender, address(this), tokenAmount);\\n        // approve router to spend tokens\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\n\\n        // add liquidity, send LP tokens to caller\\n        uniswapV2Router.addLiquidityETH{value: msg.value}(\\n            address(this),\\n            tokenAmount,\\n            amountTokenMin,\\n            amountETHMin,\\n            msg.sender,\\n            block.timestamp\\n        );\\n    }\\n\\n    /// @notice Remove liquidity from the DEX pool, burn or return LP tokens\\n    /// @dev Caller must approve this contract to spend `liquidity` LP tokens beforehand.\\n    function removeLiquidity(\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin\\n    ) external {\\n        IERC20(uniswapV2Pair).transferFrom(\\n            msg.sender,\\n            address(this),\\n            liquidity\\n        );\\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), liquidity);\\n\\n        uniswapV2Router.removeLiquidityETH(\\n            address(this),\\n            liquidity,\\n            amountTokenMin,\\n            amountETHMin,\\n            msg.sender,\\n            block.timestamp\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x06c9c5f5b98dbaed69a6711479d909b50c58e273d5d5280b20b98a5b00e7f29b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b5060405161453538038061453583398181016040528101906100329190611033565b336040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b000000000000000000000000000000000000000000000000000000000081525081600390816100ae91906112ea565b5080600490816100be91906112ea565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101335760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012a91906113cb565b60405180910390fd5b6101428161053e60201b60201c565b508373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060805173ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e891906113e6565b73ffffffffffffffffffffffffffffffffffffffff1663c9c653963060805173ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610251573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027591906113e6565b6040518363ffffffff1660e01b8152600401610292929190611413565b6020604051808303816000875af11580156102b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d591906113e6565b73ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505082600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600960003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506104916101f460a78060a661060460201b60201c565b60006104a161077260201b60201c565b600a6104ad91906115ab565b64e8d4a510006104bd91906115f6565b90506103e86005826104cf91906115f6565b6104d99190611667565b600a81905550600a600b819055507f258e24a18ff1c8ada2455b83e078fd1658c71e0d9b83f439d76d9705f66396c4600a54600b5460405161051c9291906116a7565b60405180910390a1610534338261077b60201b60201c565b5050505050611a1a565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61061261080360201b60201c565b6103e88461ffff16111561065b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106529061172d565b60405180910390fd5b808284610668919061175b565b610672919061175b565b61ffff168461ffff16146106bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b2906117dd565b60405180910390fd5b83600560146101000a81548161ffff021916908361ffff16021790555082600560166101000a81548161ffff021916908361ffff16021790555081600560186101000a81548161ffff021916908361ffff160217905550806005601a6101000a81548161ffff021916908361ffff1602179055507f89fff793699959af5dcab3e18ade40385b3b082329c97662cb42b7eb7823be0784848484604051610764949392919061180c565b60405180910390a150505050565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107ed5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107e491906113cb565b60405180910390fd5b6107ff6000838361089c60201b60201c565b5050565b610811610c1160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16610835610c1960201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161461089a5761085e610c1160201b60201c565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161089191906113cb565b60405180910390fd5b565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156109405750600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b15610956576109558382610c4360201b60201c565b5b6000600560149054906101000a900461ffff1661ffff1614806109c9575060011515600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80610a24575060011515600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b15610a3f57610a3a838383610dab60201b60201c565b610c0c565b6000612710600560149054906101000a900461ffff1661ffff1683610a6491906115f6565b610a6e9190611667565b905060008183610a7e9190611851565b90506000600560149054906101000a900461ffff1661ffff16600560169054906101000a900461ffff1661ffff1684610ab791906115f6565b610ac19190611667565b90506000600560149054906101000a900461ffff1661ffff16600560189054906101000a900461ffff1661ffff1685610afa91906115f6565b610b049190611667565b90506000818386610b159190611851565b610b1f9190611851565b9050610b5488600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685610dab60201b60201c565b610b8788600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610dab60201b60201c565b610bba88600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610dab60201b60201c565b610bcb888886610dab60201b60201c565b7f312c5308f42848705a866c73dec11fd0783c2d64aac6a97e94467062ad3f4058838383604051610bfe93929190611885565b60405180910390a150505050505b505050565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a54811115610c88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7f90611908565b60405180910390fd5b6000600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000429050620151808260010154610ce39190611928565b8110610d4057808260010181905550600082600001819055508373ffffffffffffffffffffffffffffffffffffffff167f5d37c7826b6c5b5dec39a5cd5136ed9adfcf78a5764a81502ace775a0b36fb2d60405160405180910390a25b6001826000016000828254610d559190611928565b92505081905550600b5482600001541115610da5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9c906119a8565b60405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610dfd578060026000828254610df19190611928565b92505081905550610ed0565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e89578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e80939291906119c8565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f195780600260008282540392505081905550610f66565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fc391906119ff565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061100082610fd5565b9050919050565b61101081610ff5565b811461101b57600080fd5b50565b60008151905061102d81611007565b92915050565b6000806000806080858703121561104d5761104c610fd0565b5b600061105b8782880161101e565b945050602061106c8782880161101e565b935050604061107d8782880161101e565b925050606061108e8782880161101e565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061111b57607f821691505b60208210810361112e5761112d6110d4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026111967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611159565b6111a08683611159565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006111e76111e26111dd846111b8565b6111c2565b6111b8565b9050919050565b6000819050919050565b611201836111cc565b61121561120d826111ee565b848454611166565b825550505050565b600090565b61122a61121d565b6112358184846111f8565b505050565b5b818110156112595761124e600082611222565b60018101905061123b565b5050565b601f82111561129e5761126f81611134565b61127884611149565b81016020851015611287578190505b61129b61129385611149565b83018261123a565b50505b505050565b600082821c905092915050565b60006112c1600019846008026112a3565b1980831691505092915050565b60006112da83836112b0565b9150826002028217905092915050565b6112f38261109a565b67ffffffffffffffff81111561130c5761130b6110a5565b5b6113168254611103565b61132182828561125d565b600060209050601f8311600181146113545760008415611342578287015190505b61134c85826112ce565b8655506113b4565b601f19841661136286611134565b60005b8281101561138a57848901518255600182019150602085019450602081019050611365565b868310156113a757848901516113a3601f8916826112b0565b8355505b6001600288020188555050505b505050505050565b6113c581610ff5565b82525050565b60006020820190506113e060008301846113bc565b92915050565b6000602082840312156113fc576113fb610fd0565b5b600061140a8482850161101e565b91505092915050565b600060408201905061142860008301856113bc565b61143560208301846113bc565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156114c25780860481111561149e5761149d61143c565b5b60018516156114ad5780820291505b80810290506114bb8561146b565b9450611482565b94509492505050565b6000826114db5760019050611597565b816114e95760009050611597565b81600181146114ff576002811461150957611538565b6001915050611597565b60ff84111561151b5761151a61143c565b5b8360020a9150848211156115325761153161143c565b5b50611597565b5060208310610133831016604e8410600b841016171561156d5782820a9050838111156115685761156761143c565b5b611597565b61157a8484846001611478565b925090508184048111156115915761159061143c565b5b81810290505b9392505050565b600060ff82169050919050565b60006115b6826111b8565b91506115c18361159e565b92506115ee7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846114cb565b905092915050565b6000611601826111b8565b915061160c836111b8565b925082820261161a816111b8565b915082820484148315176116315761163061143c565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611672826111b8565b915061167d836111b8565b92508261168d5761168c611638565b5b828204905092915050565b6116a1816111b8565b82525050565b60006040820190506116bc6000830185611698565b6116c96020830184611698565b9392505050565b600082825260208201905092915050565b7f746f74616c4665654250203e2031302500000000000000000000000000000000600082015250565b60006117176010836116d0565b9150611722826116e1565b602082019050919050565b600060208201905081810360008301526117468161170a565b9050919050565b600061ffff82169050919050565b60006117668261174d565b91506117718361174d565b9250828201905061ffff81111561178b5761178a61143c565b5b92915050565b7f7375622d66656573206d69736d61746368000000000000000000000000000000600082015250565b60006117c76011836116d0565b91506117d282611791565b602082019050919050565b600060208201905081810360008301526117f6816117ba565b9050919050565b6118068161174d565b82525050565b600060808201905061182160008301876117fd565b61182e60208301866117fd565b61183b60408301856117fd565b61184860608301846117fd565b95945050505050565b600061185c826111b8565b9150611867836111b8565b925082820390508181111561187f5761187e61143c565b5b92915050565b600060608201905061189a6000830186611698565b6118a76020830185611698565b6118b46040830184611698565b949350505050565b7f616d6f756e742065786365656473206d61785478416d6f756e74000000000000600082015250565b60006118f2601a836116d0565b91506118fd826118bc565b602082019050919050565b60006020820190508181036000830152611921816118e5565b9050919050565b6000611933826111b8565b915061193e836111b8565b92508282019050808211156119565761195561143c565b5b92915050565b7f65786365656473206461696c7920747820636f756e7400000000000000000000600082015250565b60006119926016836116d0565b915061199d8261195c565b602082019050919050565b600060208201905081810360008301526119c181611985565b9050919050565b60006060820190506119dd60008301866113bc565b6119ea6020830185611698565b6119f76040830184611698565b949350505050565b6000602082019050611a146000830184611698565b92915050565b60805160a051612acc611a6960003960008181610bb001528181610d3f0152610de001526000818161086c01528181610ac601528181610aed01528181610e1c0152610e9f0152612acc6000f3fe6080604052600436106101d85760003560e01c80636210ce8b1161010257806395d89b4111610095578063da1a7be911610064578063da1a7be9146106a6578063dd62ed3e146106d1578063f2fde38b1461070e578063f614134514610737576101d8565b806395d89b41146105ea578063a5949bcf14610615578063a9059cbb14610640578063d7c010321461067d576101d8565b806382611bb1116100d157806382611bb114610540578063857620e11461056b5780638c0b5e22146105945780638da5cb5b146105bf576101d8565b80636210ce8b146104855780636612e66f146104c357806370a08231146104ec578063715018a614610529576101d8565b80632a3d5fd41161017a57806342d740ac1161014957806342d740ac146103c757806349bd5a5e146103f25780634a8b07901461041d5780635342acb414610448576101d8565b80632a3d5fd41461032c5780632f15a69314610355578063313ce56714610380578063422f1043146103ab576101d8565b80631694505e116101b65780631694505e1461026e57806318160ddd1461029957806323b872dd146102c4578063264d26dd14610301576101d8565b806306fdde03146101dd578063095ea7b3146102085780631349d6e514610245575b600080fd5b3480156101e957600080fd5b506101f2610762565b6040516101ff9190611f11565b60405180910390f35b34801561021457600080fd5b5061022f600480360381019061022a9190611fcc565b6107f4565b60405161023c9190612027565b60405180910390f35b34801561025157600080fd5b5061026c60048036038101906102679190612042565b610817565b005b34801561027a57600080fd5b5061028361086a565b60405161029091906120e1565b60405180910390f35b3480156102a557600080fd5b506102ae61088e565b6040516102bb919061210b565b60405180910390f35b3480156102d057600080fd5b506102eb60048036038101906102e69190612126565b610898565b6040516102f89190612027565b60405180910390f35b34801561030d57600080fd5b506103166108c7565b6040516103239190612188565b60405180910390f35b34801561033857600080fd5b50610353600480360381019061034e91906121dd565b6108ed565b005b34801561036157600080fd5b5061036a610a55565b6040516103779190612253565b60405180910390f35b34801561038c57600080fd5b50610395610a69565b6040516103a2919061228a565b60405180910390f35b6103c560048036038101906103c091906122a5565b610a72565b005b3480156103d357600080fd5b506103dc610b9a565b6040516103e99190612253565b60405180910390f35b3480156103fe57600080fd5b50610407610bae565b6040516104149190612188565b60405180910390f35b34801561042957600080fd5b50610432610bd2565b60405161043f9190612253565b60405180910390f35b34801561045457600080fd5b5061046f600480360381019061046a91906122f8565b610be6565b60405161047c9190612027565b60405180910390f35b34801561049157600080fd5b506104ac60048036038101906104a791906122f8565b610c06565b6040516104ba929190612325565b60405180910390f35b3480156104cf57600080fd5b506104ea60048036038101906104e5919061237a565b610c2a565b005b3480156104f857600080fd5b50610513600480360381019061050e91906122f8565b610cdb565b604051610520919061210b565b60405180910390f35b34801561053557600080fd5b5061053e610d23565b005b34801561054c57600080fd5b50610555610d37565b604051610562919061210b565b60405180910390f35b34801561057757600080fd5b50610592600480360381019061058d91906122a5565b610d3d565b005b3480156105a057600080fd5b506105a9610f49565b6040516105b6919061210b565b60405180910390f35b3480156105cb57600080fd5b506105d4610f4f565b6040516105e19190612188565b60405180910390f35b3480156105f657600080fd5b506105ff610f79565b60405161060c9190611f11565b60405180910390f35b34801561062157600080fd5b5061062a61100b565b6040516106379190612188565b60405180910390f35b34801561064c57600080fd5b5061066760048036038101906106629190611fcc565b611031565b6040516106749190612027565b60405180910390f35b34801561068957600080fd5b506106a4600480360381019061069f91906123ba565b611054565b005b3480156106b257600080fd5b506106bb611195565b6040516106c89190612188565b60405180910390f35b3480156106dd57600080fd5b506106f860048036038101906106f3919061240d565b6111bb565b604051610705919061210b565b60405180910390f35b34801561071a57600080fd5b50610735600480360381019061073091906122f8565b611242565b005b34801561074357600080fd5b5061074c6112c8565b6040516107599190612253565b60405180910390f35b6060600380546107719061247c565b80601f016020809104026020016040519081016040528092919081815260200182805461079d9061247c565b80156107ea5780601f106107bf576101008083540402835291602001916107ea565b820191906000526020600020905b8154815290600101906020018083116107cd57829003601f168201915b5050505050905090565b6000806107ff6112dc565b905061080c8185856112e4565b600191505092915050565b61081f6112f6565b81600a8190555080600b819055507f258e24a18ff1c8ada2455b83e078fd1658c71e0d9b83f439d76d9705f66396c4828260405161085e929190612325565b60405180910390a15050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600254905090565b6000806108a36112dc565b90506108b085828561137d565b6108bb858585611412565b60019150509392505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108f56112f6565b6103e88461ffff16111561093e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610935906124f9565b60405180910390fd5b80828461094b9190612548565b6109559190612548565b61ffff168461ffff161461099e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610995906125ca565b60405180910390fd5b83600560146101000a81548161ffff021916908361ffff16021790555082600560166101000a81548161ffff021916908361ffff16021790555081600560186101000a81548161ffff021916908361ffff160217905550806005601a6101000a81548161ffff021916908361ffff1602179055507f89fff793699959af5dcab3e18ade40385b3b082329c97662cb42b7eb7823be0784848484604051610a4794939291906125ea565b60405180910390a150505050565b600560189054906101000a900461ffff1681565b60006012905090565b60003411610ab5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aac9061267b565b60405180910390fd5b610ac0333085611506565b610aeb307f0000000000000000000000000000000000000000000000000000000000000000856112e4565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f305d719343086868633426040518863ffffffff1660e01b8152600401610b4f9695949392919061269b565b60606040518083038185885af1158015610b6d573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b929190612711565b505050505050565b6005601a9054906101000a900461ffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600560169054906101000a900461ffff1681565b60096020528060005260406000206000915054906101000a900460ff1681565b600c6020528060005260406000206000915090508060000154908060010154905082565b610c326112f6565b80600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f318c131114339c004fff0a22fcdbbc0566bb2a7cd3aa1660e636ec5a66784ff282604051610ccf9190612027565b60405180910390a25050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610d2b6112f6565b610d356000611857565b565b600b5481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610d9a93929190612764565b6020604051808303816000875af1158015610db9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddd91906127b0565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000856040518363ffffffff1660e01b8152600401610e599291906127dd565b6020604051808303816000875af1158015610e78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9c91906127b0565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166302751cec3085858533426040518763ffffffff1660e01b8152600401610f009695949392919061269b565b60408051808303816000875af1158015610f1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f429190612806565b5050505050565b600a5481565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610f889061247c565b80601f0160208091040260200160405190810160405280929190818152602001828054610fb49061247c565b80156110015780601f10610fd657610100808354040283529160200191611001565b820191906000526020600020905b815481529060010190602001808311610fe457829003601f168201915b5050505050905090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061103c6112dc565b9050611049818585611412565b600191505092915050565b61105c6112f6565b82600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f12b4cfbea7a8dac3b859f7b88ff33db6082e4c6bb29a58b3d8edbd58ed74202860405160405180910390a4505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61124a6112f6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112bc5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016112b39190612188565b60405180910390fd5b6112c581611857565b50565b600560149054906101000a900461ffff1681565b600033905090565b6112f1838383600161191d565b505050565b6112fe6112dc565b73ffffffffffffffffffffffffffffffffffffffff1661131c610f4f565b73ffffffffffffffffffffffffffffffffffffffff161461137b5761133f6112dc565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113729190612188565b60405180910390fd5b565b600061138984846111bb565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561140c57818110156113fc578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016113f393929190612846565b60405180910390fd5b61140b8484848403600061191d565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114845760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161147b9190612188565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114f65760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016114ed9190612188565b60405180910390fd5b611501838383611506565b505050565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156115aa5750600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b156115ba576115b98382611af4565b5b6000600560149054906101000a900461ffff1661ffff16148061162d575060011515600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80611688575060011515600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b1561169d57611698838383611c5c565b611852565b6000612710600560149054906101000a900461ffff1661ffff16836116c2919061287d565b6116cc91906128ee565b9050600081836116dc919061291f565b90506000600560149054906101000a900461ffff1661ffff16600560169054906101000a900461ffff1661ffff1684611715919061287d565b61171f91906128ee565b90506000600560149054906101000a900461ffff1661ffff16600560189054906101000a900461ffff1661ffff1685611758919061287d565b61176291906128ee565b90506000818386611773919061291f565b61177d919061291f565b90506117ac88600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685611c5c565b6117d988600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684611c5c565b61180688600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611c5c565b611811888886611c5c565b7f312c5308f42848705a866c73dec11fd0783c2d64aac6a97e94467062ad3f405883838360405161184493929190612953565b60405180910390a150505050505b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361198f5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016119869190612188565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a015760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016119f89190612188565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611aee578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611ae5919061210b565b60405180910390a35b50505050565b600a54811115611b39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b30906129d6565b60405180910390fd5b6000600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000429050620151808260010154611b9491906129f6565b8110611bf157808260010181905550600082600001819055508373ffffffffffffffffffffffffffffffffffffffff167f5d37c7826b6c5b5dec39a5cd5136ed9adfcf78a5764a81502ace775a0b36fb2d60405160405180910390a25b6001826000016000828254611c0691906129f6565b92505081905550600b5482600001541115611c56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c4d90612a76565b60405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611cae578060026000828254611ca291906129f6565b92505081905550611d81565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611d3a578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611d3193929190612846565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611dca5780600260008282540392505081905550611e17565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611e74919061210b565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611ebb578082015181840152602081019050611ea0565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ee382611e81565b611eed8185611e8c565b9350611efd818560208601611e9d565b611f0681611ec7565b840191505092915050565b60006020820190508181036000830152611f2b8184611ed8565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f6382611f38565b9050919050565b611f7381611f58565b8114611f7e57600080fd5b50565b600081359050611f9081611f6a565b92915050565b6000819050919050565b611fa981611f96565b8114611fb457600080fd5b50565b600081359050611fc681611fa0565b92915050565b60008060408385031215611fe357611fe2611f33565b5b6000611ff185828601611f81565b925050602061200285828601611fb7565b9150509250929050565b60008115159050919050565b6120218161200c565b82525050565b600060208201905061203c6000830184612018565b92915050565b6000806040838503121561205957612058611f33565b5b600061206785828601611fb7565b925050602061207885828601611fb7565b9150509250929050565b6000819050919050565b60006120a76120a261209d84611f38565b612082565b611f38565b9050919050565b60006120b98261208c565b9050919050565b60006120cb826120ae565b9050919050565b6120db816120c0565b82525050565b60006020820190506120f660008301846120d2565b92915050565b61210581611f96565b82525050565b600060208201905061212060008301846120fc565b92915050565b60008060006060848603121561213f5761213e611f33565b5b600061214d86828701611f81565b935050602061215e86828701611f81565b925050604061216f86828701611fb7565b9150509250925092565b61218281611f58565b82525050565b600060208201905061219d6000830184612179565b92915050565b600061ffff82169050919050565b6121ba816121a3565b81146121c557600080fd5b50565b6000813590506121d7816121b1565b92915050565b600080600080608085870312156121f7576121f6611f33565b5b6000612205878288016121c8565b9450506020612216878288016121c8565b9350506040612227878288016121c8565b9250506060612238878288016121c8565b91505092959194509250565b61224d816121a3565b82525050565b60006020820190506122686000830184612244565b92915050565b600060ff82169050919050565b6122848161226e565b82525050565b600060208201905061229f600083018461227b565b92915050565b6000806000606084860312156122be576122bd611f33565b5b60006122cc86828701611fb7565b93505060206122dd86828701611fb7565b92505060406122ee86828701611fb7565b9150509250925092565b60006020828403121561230e5761230d611f33565b5b600061231c84828501611f81565b91505092915050565b600060408201905061233a60008301856120fc565b61234760208301846120fc565b9392505050565b6123578161200c565b811461236257600080fd5b50565b6000813590506123748161234e565b92915050565b6000806040838503121561239157612390611f33565b5b600061239f85828601611f81565b92505060206123b085828601612365565b9150509250929050565b6000806000606084860312156123d3576123d2611f33565b5b60006123e186828701611f81565b93505060206123f286828701611f81565b925050604061240386828701611f81565b9150509250925092565b6000806040838503121561242457612423611f33565b5b600061243285828601611f81565b925050602061244385828601611f81565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061249457607f821691505b6020821081036124a7576124a661244d565b5b50919050565b7f746f74616c4665654250203e2031302500000000000000000000000000000000600082015250565b60006124e3601083611e8c565b91506124ee826124ad565b602082019050919050565b60006020820190508181036000830152612512816124d6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612553826121a3565b915061255e836121a3565b9250828201905061ffff81111561257857612577612519565b5b92915050565b7f7375622d66656573206d69736d61746368000000000000000000000000000000600082015250565b60006125b4601183611e8c565b91506125bf8261257e565b602082019050919050565b600060208201905081810360008301526125e3816125a7565b9050919050565b60006080820190506125ff6000830187612244565b61260c6020830186612244565b6126196040830185612244565b6126266060830184612244565b95945050505050565b7f4d7573742073656e642045544800000000000000000000000000000000000000600082015250565b6000612665600d83611e8c565b91506126708261262f565b602082019050919050565b6000602082019050818103600083015261269481612658565b9050919050565b600060c0820190506126b06000830189612179565b6126bd60208301886120fc565b6126ca60408301876120fc565b6126d760608301866120fc565b6126e46080830185612179565b6126f160a08301846120fc565b979650505050505050565b60008151905061270b81611fa0565b92915050565b60008060006060848603121561272a57612729611f33565b5b6000612738868287016126fc565b9350506020612749868287016126fc565b925050604061275a868287016126fc565b9150509250925092565b60006060820190506127796000830186612179565b6127866020830185612179565b61279360408301846120fc565b949350505050565b6000815190506127aa8161234e565b92915050565b6000602082840312156127c6576127c5611f33565b5b60006127d48482850161279b565b91505092915050565b60006040820190506127f26000830185612179565b6127ff60208301846120fc565b9392505050565b6000806040838503121561281d5761281c611f33565b5b600061282b858286016126fc565b925050602061283c858286016126fc565b9150509250929050565b600060608201905061285b6000830186612179565b61286860208301856120fc565b61287560408301846120fc565b949350505050565b600061288882611f96565b915061289383611f96565b92508282026128a181611f96565b915082820484148315176128b8576128b7612519565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006128f982611f96565b915061290483611f96565b925082612914576129136128bf565b5b828204905092915050565b600061292a82611f96565b915061293583611f96565b925082820390508181111561294d5761294c612519565b5b92915050565b600060608201905061296860008301866120fc565b61297560208301856120fc565b61298260408301846120fc565b949350505050565b7f616d6f756e742065786365656473206d61785478416d6f756e74000000000000600082015250565b60006129c0601a83611e8c565b91506129cb8261298a565b602082019050919050565b600060208201905081810360008301526129ef816129b3565b9050919050565b6000612a0182611f96565b9150612a0c83611f96565b9250828201905080821115612a2457612a23612519565b5b92915050565b7f65786365656473206461696c7920747820636f756e7400000000000000000000600082015250565b6000612a60601683611e8c565b9150612a6b82612a2a565b602082019050919050565b60006020820190508181036000830152612a8f81612a53565b905091905056fea26469706673582212206a63336584a6eedcbb696614696964e4913b8b7562b792384f70516476d0e5e864736f6c634300081c0033",
  "deployedBytecode": "0x6080604052600436106101d85760003560e01c80636210ce8b1161010257806395d89b4111610095578063da1a7be911610064578063da1a7be9146106a6578063dd62ed3e146106d1578063f2fde38b1461070e578063f614134514610737576101d8565b806395d89b41146105ea578063a5949bcf14610615578063a9059cbb14610640578063d7c010321461067d576101d8565b806382611bb1116100d157806382611bb114610540578063857620e11461056b5780638c0b5e22146105945780638da5cb5b146105bf576101d8565b80636210ce8b146104855780636612e66f146104c357806370a08231146104ec578063715018a614610529576101d8565b80632a3d5fd41161017a57806342d740ac1161014957806342d740ac146103c757806349bd5a5e146103f25780634a8b07901461041d5780635342acb414610448576101d8565b80632a3d5fd41461032c5780632f15a69314610355578063313ce56714610380578063422f1043146103ab576101d8565b80631694505e116101b65780631694505e1461026e57806318160ddd1461029957806323b872dd146102c4578063264d26dd14610301576101d8565b806306fdde03146101dd578063095ea7b3146102085780631349d6e514610245575b600080fd5b3480156101e957600080fd5b506101f2610762565b6040516101ff9190611f11565b60405180910390f35b34801561021457600080fd5b5061022f600480360381019061022a9190611fcc565b6107f4565b60405161023c9190612027565b60405180910390f35b34801561025157600080fd5b5061026c60048036038101906102679190612042565b610817565b005b34801561027a57600080fd5b5061028361086a565b60405161029091906120e1565b60405180910390f35b3480156102a557600080fd5b506102ae61088e565b6040516102bb919061210b565b60405180910390f35b3480156102d057600080fd5b506102eb60048036038101906102e69190612126565b610898565b6040516102f89190612027565b60405180910390f35b34801561030d57600080fd5b506103166108c7565b6040516103239190612188565b60405180910390f35b34801561033857600080fd5b50610353600480360381019061034e91906121dd565b6108ed565b005b34801561036157600080fd5b5061036a610a55565b6040516103779190612253565b60405180910390f35b34801561038c57600080fd5b50610395610a69565b6040516103a2919061228a565b60405180910390f35b6103c560048036038101906103c091906122a5565b610a72565b005b3480156103d357600080fd5b506103dc610b9a565b6040516103e99190612253565b60405180910390f35b3480156103fe57600080fd5b50610407610bae565b6040516104149190612188565b60405180910390f35b34801561042957600080fd5b50610432610bd2565b60405161043f9190612253565b60405180910390f35b34801561045457600080fd5b5061046f600480360381019061046a91906122f8565b610be6565b60405161047c9190612027565b60405180910390f35b34801561049157600080fd5b506104ac60048036038101906104a791906122f8565b610c06565b6040516104ba929190612325565b60405180910390f35b3480156104cf57600080fd5b506104ea60048036038101906104e5919061237a565b610c2a565b005b3480156104f857600080fd5b50610513600480360381019061050e91906122f8565b610cdb565b604051610520919061210b565b60405180910390f35b34801561053557600080fd5b5061053e610d23565b005b34801561054c57600080fd5b50610555610d37565b604051610562919061210b565b60405180910390f35b34801561057757600080fd5b50610592600480360381019061058d91906122a5565b610d3d565b005b3480156105a057600080fd5b506105a9610f49565b6040516105b6919061210b565b60405180910390f35b3480156105cb57600080fd5b506105d4610f4f565b6040516105e19190612188565b60405180910390f35b3480156105f657600080fd5b506105ff610f79565b60405161060c9190611f11565b60405180910390f35b34801561062157600080fd5b5061062a61100b565b6040516106379190612188565b60405180910390f35b34801561064c57600080fd5b5061066760048036038101906106629190611fcc565b611031565b6040516106749190612027565b60405180910390f35b34801561068957600080fd5b506106a4600480360381019061069f91906123ba565b611054565b005b3480156106b257600080fd5b506106bb611195565b6040516106c89190612188565b60405180910390f35b3480156106dd57600080fd5b506106f860048036038101906106f3919061240d565b6111bb565b604051610705919061210b565b60405180910390f35b34801561071a57600080fd5b50610735600480360381019061073091906122f8565b611242565b005b34801561074357600080fd5b5061074c6112c8565b6040516107599190612253565b60405180910390f35b6060600380546107719061247c565b80601f016020809104026020016040519081016040528092919081815260200182805461079d9061247c565b80156107ea5780601f106107bf576101008083540402835291602001916107ea565b820191906000526020600020905b8154815290600101906020018083116107cd57829003601f168201915b5050505050905090565b6000806107ff6112dc565b905061080c8185856112e4565b600191505092915050565b61081f6112f6565b81600a8190555080600b819055507f258e24a18ff1c8ada2455b83e078fd1658c71e0d9b83f439d76d9705f66396c4828260405161085e929190612325565b60405180910390a15050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600254905090565b6000806108a36112dc565b90506108b085828561137d565b6108bb858585611412565b60019150509392505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108f56112f6565b6103e88461ffff16111561093e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610935906124f9565b60405180910390fd5b80828461094b9190612548565b6109559190612548565b61ffff168461ffff161461099e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610995906125ca565b60405180910390fd5b83600560146101000a81548161ffff021916908361ffff16021790555082600560166101000a81548161ffff021916908361ffff16021790555081600560186101000a81548161ffff021916908361ffff160217905550806005601a6101000a81548161ffff021916908361ffff1602179055507f89fff793699959af5dcab3e18ade40385b3b082329c97662cb42b7eb7823be0784848484604051610a4794939291906125ea565b60405180910390a150505050565b600560189054906101000a900461ffff1681565b60006012905090565b60003411610ab5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aac9061267b565b60405180910390fd5b610ac0333085611506565b610aeb307f0000000000000000000000000000000000000000000000000000000000000000856112e4565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f305d719343086868633426040518863ffffffff1660e01b8152600401610b4f9695949392919061269b565b60606040518083038185885af1158015610b6d573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b929190612711565b505050505050565b6005601a9054906101000a900461ffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600560169054906101000a900461ffff1681565b60096020528060005260406000206000915054906101000a900460ff1681565b600c6020528060005260406000206000915090508060000154908060010154905082565b610c326112f6565b80600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f318c131114339c004fff0a22fcdbbc0566bb2a7cd3aa1660e636ec5a66784ff282604051610ccf9190612027565b60405180910390a25050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610d2b6112f6565b610d356000611857565b565b600b5481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610d9a93929190612764565b6020604051808303816000875af1158015610db9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddd91906127b0565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000856040518363ffffffff1660e01b8152600401610e599291906127dd565b6020604051808303816000875af1158015610e78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9c91906127b0565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166302751cec3085858533426040518763ffffffff1660e01b8152600401610f009695949392919061269b565b60408051808303816000875af1158015610f1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f429190612806565b5050505050565b600a5481565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610f889061247c565b80601f0160208091040260200160405190810160405280929190818152602001828054610fb49061247c565b80156110015780601f10610fd657610100808354040283529160200191611001565b820191906000526020600020905b815481529060010190602001808311610fe457829003601f168201915b5050505050905090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061103c6112dc565b9050611049818585611412565b600191505092915050565b61105c6112f6565b82600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f12b4cfbea7a8dac3b859f7b88ff33db6082e4c6bb29a58b3d8edbd58ed74202860405160405180910390a4505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61124a6112f6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112bc5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016112b39190612188565b60405180910390fd5b6112c581611857565b50565b600560149054906101000a900461ffff1681565b600033905090565b6112f1838383600161191d565b505050565b6112fe6112dc565b73ffffffffffffffffffffffffffffffffffffffff1661131c610f4f565b73ffffffffffffffffffffffffffffffffffffffff161461137b5761133f6112dc565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113729190612188565b60405180910390fd5b565b600061138984846111bb565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561140c57818110156113fc578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016113f393929190612846565b60405180910390fd5b61140b8484848403600061191d565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114845760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161147b9190612188565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114f65760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016114ed9190612188565b60405180910390fd5b611501838383611506565b505050565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156115aa5750600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b156115ba576115b98382611af4565b5b6000600560149054906101000a900461ffff1661ffff16148061162d575060011515600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b80611688575060011515600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b1561169d57611698838383611c5c565b611852565b6000612710600560149054906101000a900461ffff1661ffff16836116c2919061287d565b6116cc91906128ee565b9050600081836116dc919061291f565b90506000600560149054906101000a900461ffff1661ffff16600560169054906101000a900461ffff1661ffff1684611715919061287d565b61171f91906128ee565b90506000600560149054906101000a900461ffff1661ffff16600560189054906101000a900461ffff1661ffff1685611758919061287d565b61176291906128ee565b90506000818386611773919061291f565b61177d919061291f565b90506117ac88600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685611c5c565b6117d988600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684611c5c565b61180688600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611c5c565b611811888886611c5c565b7f312c5308f42848705a866c73dec11fd0783c2d64aac6a97e94467062ad3f405883838360405161184493929190612953565b60405180910390a150505050505b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361198f5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016119869190612188565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a015760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016119f89190612188565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611aee578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611ae5919061210b565b60405180910390a35b50505050565b600a54811115611b39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b30906129d6565b60405180910390fd5b6000600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000429050620151808260010154611b9491906129f6565b8110611bf157808260010181905550600082600001819055508373ffffffffffffffffffffffffffffffffffffffff167f5d37c7826b6c5b5dec39a5cd5136ed9adfcf78a5764a81502ace775a0b36fb2d60405160405180910390a25b6001826000016000828254611c0691906129f6565b92505081905550600b5482600001541115611c56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c4d90612a76565b60405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611cae578060026000828254611ca291906129f6565b92505081905550611d81565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611d3a578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611d3193929190612846565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611dca5780600260008282540392505081905550611e17565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611e74919061210b565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611ebb578082015181840152602081019050611ea0565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ee382611e81565b611eed8185611e8c565b9350611efd818560208601611e9d565b611f0681611ec7565b840191505092915050565b60006020820190508181036000830152611f2b8184611ed8565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f6382611f38565b9050919050565b611f7381611f58565b8114611f7e57600080fd5b50565b600081359050611f9081611f6a565b92915050565b6000819050919050565b611fa981611f96565b8114611fb457600080fd5b50565b600081359050611fc681611fa0565b92915050565b60008060408385031215611fe357611fe2611f33565b5b6000611ff185828601611f81565b925050602061200285828601611fb7565b9150509250929050565b60008115159050919050565b6120218161200c565b82525050565b600060208201905061203c6000830184612018565b92915050565b6000806040838503121561205957612058611f33565b5b600061206785828601611fb7565b925050602061207885828601611fb7565b9150509250929050565b6000819050919050565b60006120a76120a261209d84611f38565b612082565b611f38565b9050919050565b60006120b98261208c565b9050919050565b60006120cb826120ae565b9050919050565b6120db816120c0565b82525050565b60006020820190506120f660008301846120d2565b92915050565b61210581611f96565b82525050565b600060208201905061212060008301846120fc565b92915050565b60008060006060848603121561213f5761213e611f33565b5b600061214d86828701611f81565b935050602061215e86828701611f81565b925050604061216f86828701611fb7565b9150509250925092565b61218281611f58565b82525050565b600060208201905061219d6000830184612179565b92915050565b600061ffff82169050919050565b6121ba816121a3565b81146121c557600080fd5b50565b6000813590506121d7816121b1565b92915050565b600080600080608085870312156121f7576121f6611f33565b5b6000612205878288016121c8565b9450506020612216878288016121c8565b9350506040612227878288016121c8565b9250506060612238878288016121c8565b91505092959194509250565b61224d816121a3565b82525050565b60006020820190506122686000830184612244565b92915050565b600060ff82169050919050565b6122848161226e565b82525050565b600060208201905061229f600083018461227b565b92915050565b6000806000606084860312156122be576122bd611f33565b5b60006122cc86828701611fb7565b93505060206122dd86828701611fb7565b92505060406122ee86828701611fb7565b9150509250925092565b60006020828403121561230e5761230d611f33565b5b600061231c84828501611f81565b91505092915050565b600060408201905061233a60008301856120fc565b61234760208301846120fc565b9392505050565b6123578161200c565b811461236257600080fd5b50565b6000813590506123748161234e565b92915050565b6000806040838503121561239157612390611f33565b5b600061239f85828601611f81565b92505060206123b085828601612365565b9150509250929050565b6000806000606084860312156123d3576123d2611f33565b5b60006123e186828701611f81565b93505060206123f286828701611f81565b925050604061240386828701611f81565b9150509250925092565b6000806040838503121561242457612423611f33565b5b600061243285828601611f81565b925050602061244385828601611f81565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061249457607f821691505b6020821081036124a7576124a661244d565b5b50919050565b7f746f74616c4665654250203e2031302500000000000000000000000000000000600082015250565b60006124e3601083611e8c565b91506124ee826124ad565b602082019050919050565b60006020820190508181036000830152612512816124d6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612553826121a3565b915061255e836121a3565b9250828201905061ffff81111561257857612577612519565b5b92915050565b7f7375622d66656573206d69736d61746368000000000000000000000000000000600082015250565b60006125b4601183611e8c565b91506125bf8261257e565b602082019050919050565b600060208201905081810360008301526125e3816125a7565b9050919050565b60006080820190506125ff6000830187612244565b61260c6020830186612244565b6126196040830185612244565b6126266060830184612244565b95945050505050565b7f4d7573742073656e642045544800000000000000000000000000000000000000600082015250565b6000612665600d83611e8c565b91506126708261262f565b602082019050919050565b6000602082019050818103600083015261269481612658565b9050919050565b600060c0820190506126b06000830189612179565b6126bd60208301886120fc565b6126ca60408301876120fc565b6126d760608301866120fc565b6126e46080830185612179565b6126f160a08301846120fc565b979650505050505050565b60008151905061270b81611fa0565b92915050565b60008060006060848603121561272a57612729611f33565b5b6000612738868287016126fc565b9350506020612749868287016126fc565b925050604061275a868287016126fc565b9150509250925092565b60006060820190506127796000830186612179565b6127866020830185612179565b61279360408301846120fc565b949350505050565b6000815190506127aa8161234e565b92915050565b6000602082840312156127c6576127c5611f33565b5b60006127d48482850161279b565b91505092915050565b60006040820190506127f26000830185612179565b6127ff60208301846120fc565b9392505050565b6000806040838503121561281d5761281c611f33565b5b600061282b858286016126fc565b925050602061283c858286016126fc565b9150509250929050565b600060608201905061285b6000830186612179565b61286860208301856120fc565b61287560408301846120fc565b949350505050565b600061288882611f96565b915061289383611f96565b92508282026128a181611f96565b915082820484148315176128b8576128b7612519565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006128f982611f96565b915061290483611f96565b925082612914576129136128bf565b5b828204905092915050565b600061292a82611f96565b915061293583611f96565b925082820390508181111561294d5761294c612519565b5b92915050565b600060608201905061296860008301866120fc565b61297560208301856120fc565b61298260408301846120fc565b949350505050565b7f616d6f756e742065786365656473206d61785478416d6f756e74000000000000600082015250565b60006129c0601a83611e8c565b91506129cb8261298a565b602082019050919050565b600060208201905081810360008301526129ef816129b3565b9050919050565b6000612a0182611f96565b9150612a0c83611f96565b9250828201905080821115612a2457612a23612519565b5b92915050565b7f65786365656473206461696c7920747820636f756e7400000000000000000000600082015250565b6000612a60601683611e8c565b9150612a6b82612a2a565b602082019050919050565b60006020820190508181036000830152612a8f81612a53565b905091905056fea26469706673582212206a63336584a6eedcbb696614696964e4913b8b7562b792384f70516476d0e5e864736f6c634300081c0033",
  "devdoc": {
    "errors": {
      "ERC20InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC20InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC20InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeLiquidity(uint256,uint256,uint256)": {
        "details": "Caller must approve this contract to spend `liquidity` LP tokens beforehand."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addLiquidity(uint256,uint256,uint256)": {
        "notice": "Add liquidity to the DEX pool by supplying token+ETH."
      },
      "burnFeeBP()": {
        "notice": "Sub‑fee for burn (BP)"
      },
      "liqFeeBP()": {
        "notice": "Sub‑fee for liquidity (BP)"
      },
      "mktFeeBP()": {
        "notice": "Sub‑fee for marketing (BP)"
      },
      "removeLiquidity(uint256,uint256,uint256)": {
        "notice": "Remove liquidity from the DEX pool, burn or return LP tokens"
      },
      "setExcludedFromFee(address,bool)": {
        "notice": "Exempt or include an address from fee"
      },
      "setFeeReceivers(address,address,address)": {
        "notice": "Update fee receivers"
      },
      "setTxLimits(uint256,uint256)": {
        "notice": "Update max tx amount and daily tx count"
      },
      "totalFeeBP()": {
        "notice": "Total fee in basis points (1 BP = 0.01%). Max allowed 1000 (10%)."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 307,
        "contract": "contracts/MyToken.sol:MyToken",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 313,
        "contract": "contracts/MyToken.sol:MyToken",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 315,
        "contract": "contracts/MyToken.sol:MyToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 317,
        "contract": "contracts/MyToken.sol:MyToken",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 319,
        "contract": "contracts/MyToken.sol:MyToken",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 8,
        "contract": "contracts/MyToken.sol:MyToken",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 1484,
        "contract": "contracts/MyToken.sol:MyToken",
        "label": "totalFeeBP",
        "offset": 20,
        "slot": "5",
        "type": "t_uint16"
      },
      {
        "astId": 1487,
        "contract": "contracts/MyToken.sol:MyToken",
        "label": "liqFeeBP",
        "offset": 22,
        "slot": "5",
        "type": "t_uint16"
      },
      {
        "astId": 1490,
        "contract": "contracts/MyToken.sol:MyToken",
        "label": "mktFeeBP",
        "offset": 24,
        "slot": "5",
        "type": "t_uint16"
      },
      {
        "astId": 1493,
        "contract": "contracts/MyToken.sol:MyToken",
        "label": "burnFeeBP",
        "offset": 26,
        "slot": "5",
        "type": "t_uint16"
      },
      {
        "astId": 1495,
        "contract": "contracts/MyToken.sol:MyToken",
        "label": "liquidityReceiver",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 1497,
        "contract": "contracts/MyToken.sol:MyToken",
        "label": "marketingReceiver",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 1499,
        "contract": "contracts/MyToken.sol:MyToken",
        "label": "burnReceiver",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 1503,
        "contract": "contracts/MyToken.sol:MyToken",
        "label": "isExcludedFromFee",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1510,
        "contract": "contracts/MyToken.sol:MyToken",
        "label": "maxTxAmount",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 1512,
        "contract": "contracts/MyToken.sol:MyToken",
        "label": "maxDailyTxCount",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 1522,
        "contract": "contracts/MyToken.sol:MyToken",
        "label": "txData",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_struct(TxData)1517_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_struct(TxData)1517_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct MyToken.TxData)",
        "numberOfBytes": "32",
        "value": "t_struct(TxData)1517_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(TxData)1517_storage": {
        "encoding": "inplace",
        "label": "struct MyToken.TxData",
        "members": [
          {
            "astId": 1514,
            "contract": "contracts/MyToken.sol:MyToken",
            "label": "count",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1516,
            "contract": "contracts/MyToken.sol:MyToken",
            "label": "windowStart",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}